<div id="jogosapp">

    <div class="d-grid gap-2 d-md-flex justify-content-between align-items-center">
        <h2 class="me-md-2">Jogo</h2>
        <div>
            <a :href="'/admin/dinamicas/detail/'+jogo.dinamicaId" class="btn btn-primary" type="button"><i
                    class="bi bi-arrow-left"></i></a>
        </div>
    </div>
    <div><span class="fw-semibold">Nome:</span> \{{jogo.nome}}</div>

    <hr>
    <div class="d-grid gap-2 mt-2 d-md-flex justify-content-between align-items-center">
        <h4 class="me-md-2">Lista de Desafios</h4>
        <div>
            <button @click="openAddModal()" type="button" class="btn btn-primary btn-sm"><i
                    class="bi bi-file-earmark-plus"></i>
            </button>
        </div>
    </div>
    <table class="table mt-2">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Título</th>
                <th scope="col">Descrição</th>
                <th style="width: 1%" scope="col">Ações</th>
            </tr>
        </thead>
        <tbody>
            <tr v-if="carregando">
                <td colspan="8" class="text-center"><i class="bi bi-search"></i> ...Carregando lista</td>
            </tr>
            <tr v-else-if="!carregando && jogo?.desafios?.length==0">
                <td colspan="8" class="text-center"><i class="bi bi-database-x"></i> Nehum item encontrado</td>
            </tr>
            <tr v-for="item,index in jogo.desafios" :key="index">
                <th scope="row">\{{index+1}}</th>
                <td>\{{item.titulo}}</td>
                <td>\{{item.descricao}}</td>
                <td>
                    <div class="dropdown">
                        <button class="btn " type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-three-dots-vertical"></i>
                        </button>
                        <ul class="dropdown-menu">
                            <li><button @click="openEditModal(item.id)" class="dropdown-item" type="button"><i
                                        class="bi bi-eye"></i>
                                    Visualisar</button></li>
                            <li><button @click="remove(item.id)" class="dropdown-item text-danger" type="button"><i
                                        class="bi bi-trash"></i> Remover</button>
                            </li>
                        </ul>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>



    <!-- Modal -->
    <div class="modal fade" id="adModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5 text-capitalize" id="staticBackdropLabel">Novo</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" v-model="desafio.titulo">
                        <label for="floatingInput">Título</label>
                    </div>
                    <div class="form-floating mb-3">
                        <textarea type="text" class="form-control" v-model="desafio.descricao" rows="3"></textarea>
                        <label for="floatingInput">Descrição</label>
                    </div>
                    <span class="ffs-6">Opções</span>
                    <div class="form-floating mb-3" v-for="opcao,index in desafio.opcoes" :key="index">
                        <input type="text" class="form-control" v-model="opcao.descricao">
                        <label for="floatingInput">Opção \{{opcao.valor}} </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal"><i
                            class="bi bi-x-lg"></i>
                        Cancelar</button>
                    <button type="button" @click="save" class="btn btn-primary btn-sm"><i class="bi bi-save"></i>
                        Salvar</button>
                </div>
            </div>
        </div>
    </div>

</div>

<script>

    var app = new Vue({
        el: '#jogosapp',
        data: {
            loadingPage: true,
            jogo: [],
            desafio: {
                opcoes: [
                    { valor: "A", descricao: "" },
                    { valor: "B", descricao: "" },
                    { valor: "C", descricao: "" },
                    { valor: "D", descricao: "" }
                ]
            },
            addModal: {},
            action: "",
            carregando: false
        },
        methods: {
            async loadPage() {

                this.carregando = true;
                try {
                    const result = await fetch(`/admin/jogos/getOne/{{data.id}}`)
                    const data = await result.json()
                    this.jogo = data;
                    this.carregando = false;
                } catch (e) {
                    console.log(e)
                    this.carregando = false;
                }
            },
            async openAddModal() {
                this.action = "add";
                this.desafio = {
                    opcoes: [
                        { valor: "A", descricao: "" },
                        { valor: "B", descricao: "" },
                        { valor: "C", descricao: "" },
                        { valor: "D", descricao: "" }
                    ]
                }
                this.addModal = new bootstrap.Modal('#adModal')
                this.addModal.show()
            },
            async openEditModal(id) {
                this.action = "edit";
                this.desafio = await this.getDesafio(id)
                if (this.desafio.opcoes.length == 0) {
                    this.desafio.opcoes = [
                        { valor: "A", descricao: "" },
                        { valor: "B", descricao: "" },
                        { valor: "C", descricao: "" },
                        { valor: "D", descricao: "" }
                    ]
                }
                this.addModal = new bootstrap.Modal('#adModal')
                this.addModal.show()
            },
            async save() {
                let validaResult = validaOjeto(this.desafio);

                if (validaResult.length > 0) {
                    ShowMessage("warning", "Campos obrigatórios", validaResult.join("<br>"))
                    return
                }
                let payload = { ... this.desafio }
                const result = await fetch(`/admin/desafios/${this.action}/{{data.id}}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ data: payload }),
                });
                if (result.ok) {
                    const data = await result.json()
                    this.loadPage();
                    this.desafio = {
                        opcoes: [
                            { valor: "A", descricao: "" },
                            { valor: "B", descricao: "" },
                            { valor: "C", descricao: "" },
                            { valor: "D", descricao: "" }
                        ]
                    }
                    this.addModal.hide()
                    showMessageToast('success', 'item adicionado!')

                }
            },
            async remove(id) {
                let questionResult = await ShowQuestion("Deseja realmente remover este item?");
                if (!questionResult)
                    return

                const result = await fetch(`/admin/desafios/remove/${this.jogo.id}/${id}`);
                if (result.ok) {
                    this.loadPage();
                    showMessageToast('success', 'item removido!')
                }
            },
            async getDesafio(id) {
                const result = await fetch(`/admin/desafios/getOne/${id}`)
                const data = await result.json()
                return data;
            }

        },
        mounted() {
            this.loadPage();
        }
    })

</script>