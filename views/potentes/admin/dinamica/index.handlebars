<div id="dinamicassapp">
    <div class="card mx-4">
        <div class="card-body">
            <div class="d-grid gap-2 d-md-flex justify-content-between align-items-center">
                <h2 class="me-md-2">Lista de Dinamicas</h2>
                <div>
                    <button @click="openAddModal()" type="button" class="btn btn-primary btn-sm">
                        <i class="bi bi-file-earmark-plus"></i>
                    </button>
                </div>
            </div>

            <table class="table mt-4">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Nome</th>
                        <th style="width: 1%" scope="col">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="item,index in dinamicas" :key="index">
                        <th scope="row">\{{index+1}}</th>
                        <td>\{{item.nome}}</td>
                        <td>
                            <div class="dropdown">
                                <button class="btn " type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-three-dots-vertical"></i>
                                </button>
                                <ul class="dropdown-menu">
                                    <li><a :href="'/admin/dinamicas/detail/'+item.id" class="dropdown-item" type="button"><i
                                                class="bi bi-eye"></i>
                                            Visualisar</a></li>
                                    <li><button @click="remove(item.id)" class="dropdown-item text-danger"
                                            type="button"><i class="bi bi-trash"></i> Remover</button>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <!-- Modal -->
    <div class="modal fade" id="openAddModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Novo</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" v-model="novoItem.nome">
                        <label class="text-capitalize">nome</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal"><i
                            class="bi bi-x-lg"></i>
                        Cancelar</button>
                    <button type="button" @click="save" class="btn btn-primary btn-sm"><i class="bi bi-save"></i>
                        Salvar</button>
                </div>
            </div>
        </div>
    </div>

</div>

<script>

    var app = new Vue({
        el: '#dinamicassapp',
        data: {
            loadingPage: true,
            addModal: {},
            novoItem: {},
            dinamicas: [],
        },
        methods: {
            async loadPage() {
                await this.getDinamicas()
            },
            async getDinamicas() {
                const result = await fetch(`/admin/dinamicas/getAll`)
                const data = await result.json()
                this.dinamicas = data;
            },
            async openAddModal() {
                this.novoItem = {}
                this.addModal = new bootstrap.Modal('#openAddModal')
                this.addModal.show()
            },
            async remove(id) {
                let questionResult = await ShowQuestion("deseja realmente remover este item?");
                if (!questionResult)
                    return

                const result = await fetch(`/admin/dinamicas/remove/${id}`);
                if (result.ok) {
                    this.loadPage();
                    showMessageToast('success', 'item removido!')

                }
            },
            async save() {
                let validaResult = validaOjeto(this.novoItem);

                if (validaResult.length > 0) {
                    ShowMessage("warning", "Campos obrigatórios", validaResult.join("<br>"))
                    return
                }
                const result = await fetch(`/admin/dinamicas/add`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ data: this.novoItem }),
                });
                if (result.ok) {
                    const data = await result.json()
                    this.dinamicas.push(data);
                    this.novoItem = {}
                    this.addModal.hide()
                    showMessageToast('success', 'item adicionado!')

                }
            },

        },
        mounted() {
            this.loadPage();
        }
    })

</script>