<div id="gruposapp">
    <div class="d-grid gap-2 d-md-flex justify-content-between align-items-center">
        <h2 class="me-md-2">Lista de Grupos</h2>
        <div>
            <button @click="openGrupoModal()" type="button" class="btn btn-outline-primary btn-sm"><i
                    class="bi bi-plus"></i>
                Grupo</button>
        </div>
    </div>

    <table class="table mt-4">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Data</th>
                <th scope="col">Dinamica</th>
                <th scope="col">Jogo</th>
                <th scope="col">Cliente</th>
                <th scope="col">Monitor</th>
                <th scope="col">Qtd participantes</th>
                <th style="width: 1%" scope="col">Ações</th>
            </tr>
        </thead>
        <tbody>
            <tr v-if="carregando">
                <td colspan="8" class="text-center"><i class="bi bi-search"></i> ...Carregando lista</td>
            </tr>
            <tr v-else-if="!carregando && grupos.length==0">
                <td colspan="8" class="text-center"><i class="bi bi-database-x"></i> Nehum item encontrado</td>
            </tr>
            <tr v-for="item,index in grupos" :key="index">
                <td>\{{index+1}}</td>
                <td>\{{item.data?item.data.split("T")[0].split("-").reverse().join("/"):""}}</td>
                <td>\{{item.jogo.dinamica.nome}}</td>
                <td>\{{item.jogo.nome}}</td>
                <td>\{{item.cliente.nome}}</td>
                <td>\{{item.user?item.user.nome:"---"}}</td>
                <td>\{{item?.participantes ? item.participantes.length : 0}}
                    <span :class="'badge bg-'+status.find(o=>o.id ==item.status).tag">
                        \{{status.find(o=>o.id==item.status).descricao}}
                    </span>
                </td>
                <td>
                    <div class="btn-group btn-group-sm" role="group" aria-label="Basic outlined example">
                        <a type="button" :href="'/grupos/detail/'+item.id" class="btn btn-outline-info"
                            title="Visualisar"><i class="bi bi-eye"></i></a>
                        <button type="button" @click="removeGrupo(item.id)" class="btn btn-outline-danger"
                            title="Remover"><i class="bi bi-trash"></i></button>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>

    <!-- Modal -->
    <div class="modal fade" id="addGrupo" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content bg-secondary">
                <div class="modal-header">
                    <h1 class="modal-title fs-5" id="staticBackdropLabel">Novo grupo</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class=" mb-3">
                        <label class="text-capitalize">data</label>
                        <vuejs-datepicker :language="vdp_translation_index.ptBR" format="dd/MM/yyyy"
                            input-class="form-control" v-model="novoGrupo.data"></vuejs-datepicker>
                    </div>

                    <div class=" mb-3">
                        <label class="text-capitalize">dinamica</label>
                        <select class="form-select" v-model="novoGrupo.dinamicaId">
                            <option selected>Selecione um dinamica</option>
                            <option v-for="item,index in dinamicas" :key="index" :value="item.id">\{{item.nome}}
                            </option>
                        </select>
                    </div>

                    <div class=" mb-3">
                        <label class="text-capitalize">jogo</label>
                        <select class="form-select" v-model="novoGrupo.jogoId">
                            <option selected>Selecione um jogo</option>
                            <option v-for="item,index in dinamicas.find(o => o.id == novoGrupo.dinamicaId)?.jogos||[]"
                                :key="index" :value="item.id">\{{item.nome}}</option>
                        </select>
                    </div>

                    <div class=" mb-3" v-if="userType==0">
                        <label class="text-capitalize">Clientes</label>
                        <select class="form-select" v-model="novoGrupo.clienteId">
                            <option selected>Selecione um jogo</option>
                            <option v-for="item,index in clientes||[]" :key="index" :value="item.id">\{{item.nome}}
                            </option>
                        </select>
                    </div>

                    <div class=" mb-3" v-else>
                        <label class="text-capitalize">Cliente</label>
                        <input type="text" class="form-control " disabled
                            :value="clientes.find(o=>o.id == novoGrupo.clienteId)?clientes.find(o=>o.id == novoGrupo.clienteId).nome:'' ">
                    </div>

                    <div class="mb-3">
                        <label class="text-capitalize">monitor</label>
                        <input type="text" class="form-control " disabled v-model="novoGrupo.monitor"
                            value="{{user.nome}}">
                    </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal"><i
                            class="bi bi-x-lg"></i>
                        Cancelar</button>
                    <button type="button" disabled v-if="salvando" class="btn btn-primary btn-sm">
                        <i class="bi bi-hourglass-split"></i>
                        Salvando</button>
                    <button type="button" @click="saveGrupo" v-else class="btn btn-primary btn-sm"><i
                            class="bi bi-save"></i>
                        Salvar</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://unpkg.com/vuejs-datepicker"></script>
<script src="https://unpkg.com/vuejs-datepicker@1.6.2/dist/locale"></script>
<script>
    var app = new Vue({
        el: '#gruposapp',
        components: {
            vuejsDatepicker
        },
        data: {
            loadingPage: true,
            grupos: [],
            dinamicas: [],
            novoGrupo: { data: "", dinamica: "", jogo: "", clienteId: "{{user.clienteId}}" },
            addGrupoModal: {},
            clientes: [],
            status: [
                { id: 1, descricao: "Aberto", tag: "primary" },
                { id: 2, descricao: "Em Analise", tag: "warning" },
                { id: 3, descricao: "Concluído", tag: "success" },
            ],
            userType: '{{user.tipo}}',
            carregando: false,
            salvando: false,
        },
        methods: {
            async loadPage() {
                this.carregando = true;
                try {
                    await Promise.all([this.getGrupos(), this.getDinamicas(), this.getClientes()])
                    this.carregando = false;
                } catch (e) {
                    console.log(e)
                    this.carregando = false;
                }
            },
            async getGrupos() {
                const result = await fetch(`/grupos/getAll`)
                const data = await result.json()
                this.grupos = data;
            },
            async getDinamicas() {
                const result = await fetch(`/dinamicas/getAll`)
                const data = await result.json()
                this.dinamicas = data;
            },
            async getClientes() {
                const result = await fetch(`/admin/clientes/getAll`)
                const data = await result.json()
                this.clientes = data;
            },
            async openGrupoModal() {
                this.novoGrupo = { data: "", dinamica: "", jogo: "", clienteId: "{{user.clienteId}}" }
                this.addGrupoModal = new bootstrap.Modal('#addGrupo')
                this.addGrupoModal.show()
            },
            async removeGrupo(grupoId) {
                let questionResult = await ShowQuestion("deseja realmente remover este grupo?");
                if (!questionResult)
                    return

                const result = await fetch(`/grupos/remove/${grupoId}`);
                if (!result.ok) {
                    showMessageToast('error', 'Erro ao executar esta ação!')
                    return
                }
                this.getGrupos();
                showMessageToast('success', 'Grupo removido!')


            },
            async saveGrupo() {
                this.salvando = true;
                showMessageToast('success', 'Salvando informações!')
                this.addGrupoModal.hide()

                try {
                    let validaResult = validaOjeto(this.novoGrupo);

                    if (validaResult.length > 0) {
                        ShowMessage("warning", "Campos obrigatórios", validaResult.join("<br>"))
                        this.salvando = false;
                        return
                    }
                    const result = await fetch(`/grupos/addGrupo`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ data: this.novoGrupo }),
                    });
                    if (!result.ok) {
                        showMessageToast('error', 'Erro ao executar esta ação!')
                        this.salvando = false;
                        return
                    }
                    const data = await result.json()
                    await this.getGrupos()
                    this.novoGrupo = {}
                    showMessageToast('success', 'Grupo adicionado!')
                    this.salvando = false;
                } catch (e) {
                    console.log(e)
                    this.salvando = false;
                }

            },

        },
        mounted() {
            this.loadPage();
        }
    })

</script>